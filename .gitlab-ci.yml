image: python:3.10-bullseye

stages:
  - build

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  GIT_SUBMODULE_STRATEGY: recursive

cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -r requirements.txt
  - pip install teachbooks  # Added this line


build-and-deploy:
  stage: build
  script:
    # Debug info before build
    - echo "Starting build process..."
    - df -h
    - pwd
    - ls -la

    # Set build variables
    - |
      if [ "$CI_COMMIT_BRANCH" == "release" ]; then
        BUILD_TYPE="production"
        BUILD_CMD="teachbooks build --publish book/"
        HOOK_URL="https://mude.citg.tudelft.nl/hooks/book-deploy-production"
      else
        BUILD_TYPE="draft"
        BUILD_CMD="teachbooks build book/"
        HOOK_URL="https://mude.citg.tudelft.nl/hooks/book-deploy-draft"
      fi
    
    # Execute build
    - echo "Building ${BUILD_TYPE} version"
    - eval "${BUILD_CMD}" > >(tee stdout.log) 2> >(tee stderr.log >&2)

    # Get build size and handle deployment
    - echo "Calculating build size..."
    - SIZE=$(du -sk book/_build/html | cut -f1)
    - echo "Build size is ${SIZE}KB"
    - echo $CI_JOB_ID > build_job_id.txt
    
    # Create minimal artifact set if build is large
    - |
      if [ "$SIZE" -gt 153600 ]; then
        echo "Build size too large, creating minimal artifact set"
        mkdir -p minimal_artifact
        cp build_job_id.txt minimal_artifact/
        cp stdout.log minimal_artifact/
        cp stderr.log minimal_artifact/
      fi

    # Notify webhook
    - |
      curl -X POST "${HOOK_URL}" \
        -H "Content-Type: application/json" \
        -H "X-Gitlab-Token: glpat-m4CzsDqHnXNn3Pf5Whyd" \
        -d "{\"object_kind\":\"pipeline\",\"object_attributes\":{\"status\":\"success\",\"ref\":\"${CI_COMMIT_BRANCH}\"},\"build_job_id\":$CI_JOB_ID}"

    # Debug info after build
    - echo "Directory sizes after build:"
    - du -sh book/_build/*
    - echo "Build and deploy completed"

  artifacts:
    when: on_success
    paths:
      - stdout.log
      - stderr.log
      - build_job_id.txt
      - minimal_artifact/
      - book/_build/html/**
    exclude:
      - book/_build/jupyter_execute/**
      - "**/*.ipynb"
      - "**/__pycache__"
      - "**/*.pyc"
      - book/_build/.doctrees
      - book/_build/jupyter_cache
      - book/_build/.jupyter_cache
      - "**/*.pickle"
      - "**/*.doctree"
      - "**/*.ipynb_checkpoints"
    expire_in: 1 week

  environment:
    name: $CI_COMMIT_BRANCH
    url: $CI_ENVIRONMENT_URL

  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      variables:
        CI_ENVIRONMENT_URL: "https://mude.citg.tudelft.nl/2024/book/draft"
    - if: $CI_COMMIT_BRANCH == "release"
      variables:
        CI_ENVIRONMENT_URL: "https://mude.citg.tudelft.nl/2024/book"